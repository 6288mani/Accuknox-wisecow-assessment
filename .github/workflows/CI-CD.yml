name: End to End CI/CD workflow for wisecow application by Accuknox Assessment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.REGISTRY_USERNAME }}/wisecow-app .

      - name: Push Docker image
        run: docker push ${{ secrets.REGISTRY_USERNAME }}/wisecow-app:latest

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          kubectl-version: 'latest'

      # Set up kubeconfig from GitHub Secrets
      - name: Set kubeconfig
        run: |
            mkdir -p $HOME/.kube
            echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

     # Verify kubectl is working
      - name: Verify kubectl
        run: kubectl version --client

      - name: Apply Kubernetes Deployment
        run: |
            kubectl apply -f k8s/deployment.yaml
            kubectl apply -f k8s/service.yaml
        working-directory: ./  # Ensure you're running this from the root or correct directory

      - name: List all services for debugging
        run: kubectl get svc

      - name: Wait for LoadBalancer external IP
        run: |
          EXTERNAL_IP=""
          # Wait for the EXTERNAL-IP to be assigned
          while [ -z "$EXTERNAL_IP" ]; do
            echo "Waiting for external IP..."
            EXTERNAL_IP=$(kubectl get svc wisecow -o=jsonpath='{.status.loadBalancer.ingress[0].ip}')
            if [ -z "$EXTERNAL_IP" ]; then
              sleep 10
            fi
          done
          echo "External IP assigned: $EXTERNAL_IP"
          echo "EXTERNAL_IP=$EXTERNAL_IP" >> $GITHUB_ENV

      - name: Use External IP
        run: |
          # Now you can use the EXTERNAL_IP variable in your workflow
          echo "Using External IP: ${{ env.EXTERNAL_IP }}"
          # Example: curl the service or run some other action
          curl http://${{ env.EXTERNAL_IP }}:4499
